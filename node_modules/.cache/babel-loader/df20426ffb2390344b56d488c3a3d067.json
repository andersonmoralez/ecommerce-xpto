{"remainingRequest":"/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/thread-loader/dist/cjs.js!/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/babel-loader/lib/index.js!/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/eslint-loader/index.js??ref--13-0!/home/ruanmoralez/Documentos/ecommerce/Front-end/src/components/shared/service/authService.js","dependencies":[{"path":"/home/ruanmoralez/Documentos/ecommerce/Front-end/src/components/shared/service/authService.js","mtime":1614478249708},{"path":"/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/ruanmoralez/Documentos/ecommerce/Front-end/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\n\n/* Encryption User based on base64 */\nexport var encryptUser = function encryptUser(user) {\n  var objStr = JSON.stringify(user);\n  var encryptedValue = new Buffer(objStr).toString(\"base64\");\n  return encryptedValue;\n};\n/* Decrypting User based on base64*/\n\nexport var decryptUser = function decryptUser() {\n  var data = localStorage.getItem(\"_auth\");\n\n  if (!data) {\n    return null;\n  }\n\n  var strObj = new Buffer(data || \"\", \"base64\").toString(\"utf8\");\n  var value = JSON.parse(strObj);\n  return value;\n};\n/* Verify that person is loggedIn */\n\nexport var isLoggedIn = function isLoggedIn() {\n  var data = decryptUser();\n\n  if (data) {\n    return true;\n  }\n\n  return false;\n};\n/* Verifying that the user is Admin or not */\n\nexport var isAdmin = function isAdmin() {\n  var data = decryptUser();\n  var hasAdmin = false;\n\n  if (data[\"isAdmin\"]) {\n    hasAdmin = true;\n  }\n\n  return hasAdmin;\n};\n/* Returning the logged User */\n\nexport var getLoggedInUser = function getLoggedInUser() {\n  var data = decryptUser();\n  return data;\n};",{"version":3,"sources":["/home/ruanmoralez/Documentos/ecommerce/Front-end/src/components/shared/service/authService.js"],"names":["encryptUser","user","objStr","JSON","stringify","encryptedValue","Buffer","toString","decryptUser","data","localStorage","getItem","strObj","value","parse","isLoggedIn","isAdmin","hasAdmin","getLoggedInUser"],"mappings":";;AAAA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AACjC,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAf;AACA,MAAMI,cAAc,GAAG,IAAIC,MAAJ,CAAWJ,MAAX,EAAmBK,QAAnB,CAA4B,QAA5B,CAAvB;AACA,SAAOF,cAAP;AACH,CAJM;AAMP;;AACA,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,GAAM;AAC7B,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAb;;AACA,MAAI,CAACF,IAAL,EAAW;AACP,WAAO,IAAP;AACH;;AACD,MAAMG,MAAM,GAAG,IAAIN,MAAJ,CAAWG,IAAI,IAAI,EAAnB,EAAuB,QAAvB,EAAiCF,QAAjC,CAA0C,MAA1C,CAAf;AACA,MAAMM,KAAK,GAAGV,IAAI,CAACW,KAAL,CAAWF,MAAX,CAAd;AACA,SAAOC,KAAP;AACH,CARM;AAUP;;AACA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC5B,MAAMN,IAAI,GAAGD,WAAW,EAAxB;;AACA,MAAIC,IAAJ,EAAU;AACN,WAAO,IAAP;AACH;;AACD,SAAO,KAAP;AACH,CANM;AAQP;;AACA,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,MAAMP,IAAI,GAAGD,WAAW,EAAxB;AACA,MAAIS,QAAQ,GAAG,KAAf;;AACA,MAAIR,IAAI,CAAC,SAAD,CAAR,EAAqB;AACjBQ,IAAAA,QAAQ,GAAG,IAAX;AACH;;AACD,SAAOA,QAAP;AACH,CAPM;AASP;;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACjC,MAAMT,IAAI,GAAGD,WAAW,EAAxB;AACA,SAAOC,IAAP;AACH,CAHM","sourcesContent":["/* Encryption User based on base64 */\nexport const encryptUser = (user) => {\n    const objStr = JSON.stringify(user);\n    const encryptedValue = new Buffer(objStr).toString(\"base64\");\n    return encryptedValue;\n}\n\n/* Decrypting User based on base64*/\nexport const decryptUser = () => {\n    const data = localStorage.getItem(\"_auth\");\n    if (!data) {\n        return null;\n    }\n    const strObj = new Buffer(data || \"\", \"base64\").toString(\"utf8\");\n    const value = JSON.parse(strObj);\n    return value;\n}\n\n/* Verify that person is loggedIn */\nexport const isLoggedIn = () => {\n    const data = decryptUser();\n    if (data) {\n        return true;\n    }\n    return false;\n}\n\n/* Verifying that the user is Admin or not */\nexport const isAdmin = () => {\n    const data = decryptUser();\n    let hasAdmin = false;\n    if (data[\"isAdmin\"]) {\n        hasAdmin = true;\n    }\n    return hasAdmin;\n}\n\n/* Returning the logged User */\nexport const getLoggedInUser = () => {\n    const data = decryptUser();\n    return data;\n}"]}]}